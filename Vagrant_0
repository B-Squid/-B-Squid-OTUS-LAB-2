# -*- mode: ruby -*-
# vim: set ft=ruby :
disks = 'b c'

Vagrant.configure('2') do |config|
   config.vm.box = 'centos/7'

   config.vm.define :control do |control|
     control.vm.hostname = 'lab2'
     control.vm.network :public_network
     control.vm.network :private_network, ip: '192.168.11.101'
     control.vm.provider :kvm do |kvm, override|
        kvm.memory_size = '1024m'
     end
     
     control.vm.provider :libvirt do |libvirt|
        libvirt.memory = 1024
        libvirt.nested = true
        libvirt.disk_bus = 'sata'                                                                          #i don`t want to use vda, sda only
        libvirt.disk_device = 'sda'
        libvirt.storage :file, :device => 'sdb', :bus => 'sata', :size => '1000M', :serial => 'lab2-disk-0'#rewrite to loop
        libvirt.storage :file, :device => 'sdc', :bus => 'sata', :size => '1000M', :serial => 'lab2-disk-1'
     end

     config.vm.provision "init", run: "once", type: "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
        cp ~vagrant/.ssh/auth* ~root/.ssh
        yum install -y mdadm smartmontools hdparm gdisk wget
        SHELL

     config.vm.provision "disks_prepare", run: "once", type: "shell", 
        inline: <<-SHELL
           for disk in #{disks}
           do    
             ( echo o; echo n; echo p; echo 1; echo ; echo ; echo t; echo fd; echo w; ) | sudo fdisk /dev/sd$disk
           done
           SHELL

     config.vm.provision "raid_routine", run: "once", type: "shell",
inline: <<-SHELL
yes | mdadm --create --verbose /dev/md0 --level=0 --raid-devices=2 /dev/sdb /dev/sdc
sleep 2
parted --script /dev/md0 \
    mklabel gpt \
    mkpart primary 1MiB 100MiB \
    mkpart primary 100MiB 200MiB \
    mkpart primary 200MiB 300MiB \
    mkpart primary 300MiB 400MiB \
    mkpart primary 400MiB 500MiB
for i in {1..5}
do
mkfs.xfs /dev/md0p$i
mkdir /mnt/p$i
echo "/dev/md0p$i       /mnt/p$i        xfs     defaults        1 2" >> /etc/fstab
done
mkdir /etc/mdadm && touch /etc/mdadm/mdadm.conf
echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
mdadm --detail --scan | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf
mount -a
SHELL
     end
end
